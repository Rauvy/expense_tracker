# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—É—é –º–æ–¥–µ–ª—å –∏–∑ Pydantic ‚Äî –æ–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–∏–ø ObjectId, –∫–æ—Ç–æ—Ä—ã–π Beanie –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–ª—è MongoDB-–¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
from datetime import datetime
from decimal import Decimal  # –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç Decimal

from beanie import PydanticObjectId
from pydantic import BaseModel, ConfigDict, EmailStr, Field

from src.models import TransactionType


class BaseModelWithConfig(BaseModel):
    """–ë–∞–∑–æ–≤–∞—è –º–æ–¥–µ–ª—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏"""

    model_config = ConfigDict(
        json_encoders={
            PydanticObjectId: str,  # MongoDB ID -> —Å—Ç—Ä–æ–∫–∞
            Decimal: str,  # Decimal -> —Å—Ç—Ä–æ–∫–∞
        }
    )


class BaseModelWithDecimalAsFloat(BaseModel):
    """–ë–∞–∑–æ–≤–∞—è –º–æ–¥–µ–ª—å –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π, –≥–¥–µ Decimal –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –≤ float"""

    model_config = ConfigDict(
        json_encoders={
            PydanticObjectId: str,  # MongoDB ID -> —Å—Ç—Ä–æ–∫–∞
            Decimal: float,  # Decimal -> float –¥–ª—è —á–∏—Å–ª–æ–≤—ã—Ö –ø–æ–ª–µ–π
        }
    )


# ---------- üì• –ú–æ–¥–µ–ª–∏, –ø–æ–ª—É—á–∞–µ–º—ã–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ (–≤—Ö–æ–¥—è—â–∏–µ –¥–∞–Ω–Ω—ã–µ) ----------


# –ú–æ–¥–µ–ª—å, –∫–æ—Ç–æ—Ä—É—é –∫–ª–∏–µ–Ω—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
class UserCreate(BaseModelWithConfig):
    email: EmailStr  # Email ‚Äî –≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–∞–∫ email
    password: str  # –ü–∞—Ä–æ–ª—å –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏ (–≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –≤–∏–¥–µ –Ω–∞ —ç—Ç–æ–º —ç—Ç–∞–ø–µ)
    first_name: str  # –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ)
    last_name: str  # –§–∞–º–∏–ª–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ)
    birth_date: datetime | None = None  # –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è
    initial_balance: Decimal = Field(default=Decimal("0.00"))  # –ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å


# –ú–æ–¥–µ–ª—å, –∫–æ—Ç–æ—Ä—É—é –∫–ª–∏–µ–Ω—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏ –ª–æ–≥–∏–Ω–µ
class UserLogin(BaseModelWithConfig):
    email: EmailStr  # –¢–æ–∂–µ email
    password: str  # –ü–∞—Ä–æ–ª—å, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –µ–≥–æ —Å —Ö—ç—à–µ–º –∏–∑ –±–∞–∑—ã


# ---------- üì§ –ú–æ–¥–µ–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è –∫–ª–∏–µ–Ω—Ç—É (–æ—Ç–≤–µ—Ç—ã API) ----------


# –ü—É–±–ª–∏—á–Ω–∞—è –º–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚Äî –±–µ–∑ –ø–∞—Ä–æ–ª—è
class UserPublic(BaseModelWithConfig):
    id: PydanticObjectId  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ MongoDB
    email: EmailStr  # Email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –º—ã –º–æ–∂–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ –≤–µ—Ä–Ω—É—Ç—å
    first_name: str  # –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    last_name: str  # –§–∞–º–∏–ª–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    birth_date: datetime | None = None  # –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è
    balance: Decimal  # –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è


# –ú–æ–¥–µ–ª—å —Ç–æ–∫–µ–Ω–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–∞—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ª–æ–≥–∏–Ω–∞
class Token(BaseModel):
    access_token: str  # JWT-—Ç–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –º—ã —Å–æ–∑–¥–∞–¥–∏–º
    refresh_token: str | None = None  # JWT-—Ç–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –º—ã —Å–æ–∑–¥–∞–¥–∏–º
    token_type: str = "bearer"  # –¢–∏–ø —Ç–æ–∫–µ–Ω–∞ ‚Äî –≤—Å–µ–≥–¥–∞ "bearer" –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å OAuth2


# –í—Ö–æ–¥: –∫–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π —Ä–∞—Å—Ö–æ–¥
class ExpenseCreate(BaseModel):
    amount: Decimal
    category: str | None = None
    payment_method: str | None = None
    date: datetime | None = None
    description: str | None = None


# –í—ã—Ö–æ–¥: —Å–µ—Ä–≤–µ—Ä –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ä–∞—Å—Ö–æ–¥
class ExpensePublic(BaseModel):
    id: PydanticObjectId
    amount: Decimal
    category: str | None = None
    payment_method: str | None = None
    date: datetime | None = None
    description: str | None = None
    user_id: PydanticObjectId


# –ú–æ–¥–µ–ª—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (–¥–æ—Ö–æ–¥ –∏–ª–∏ —Ä–∞—Å—Ö–æ–¥)
class TransactionCreate(BaseModelWithDecimalAsFloat):
    amount: Decimal
    type: TransactionType  # –ò—Å–ø–æ–ª—å–∑—É–µ–º enum –≤–º–µ—Å—Ç–æ —Å—Ç—Ä–æ–∫–∏
    category: str | None = None
    payment_method: str | None = None
    source: str | None = None  # –î–ª—è –¥–æ—Ö–æ–¥–æ–≤
    date: datetime | None = None
    description: str | None = None


# –ú–æ–¥–µ–ª—å –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç—É
class TransactionPublic(BaseModelWithDecimalAsFloat):
    id: PydanticObjectId
    amount: Decimal
    type: TransactionType  # –ò—Å–ø–æ–ª—å–∑—É–µ–º enum –≤–º–µ—Å—Ç–æ —Å—Ç—Ä–æ–∫–∏
    category: str | None = None
    payment_method: str | None = None
    source: str | None = None
    date: datetime | None = None
    description: str | None = None
    user_id: PydanticObjectId
    model_config = ConfigDict(json_encoders={PydanticObjectId: str})


class PaginatedTransactionsResponse(BaseModel):
    items: list[TransactionPublic]
    total: int
    limit: int
    offset: int
    has_next: bool

    model_config = ConfigDict(json_encoders={PydanticObjectId: str})


# –ú–æ–¥–µ–ª—å –¥–ª—è –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞
# –ú–æ–¥–µ–ª—å –¥–ª—è Google OAuth
class GoogleLoginPayload(BaseModel):
    id_token: str


# –ú–æ–¥–µ–ª—å –¥–ª—è –æ—Ç–≤–µ—Ç–∞ —Å —Ç–æ–∫–µ–Ω–æ–º
class TokenResponse(BaseModel):
    access_token: str
    refresh_token: str | None = None
    token_type: str = "bearer"


# –ú–æ–¥–µ–ª—å –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è
class PasswordUpdateRequest(BaseModel):
    old_password: str = Field(..., min_length=6)
    new_password: str = Field(..., min_length=8)


# –ú–æ–¥–µ–ª—å –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è
class PasswordUpdateResponse(BaseModel):
    detail: str = "Password updated successfully."
